{"ast":null,"code":"import axios from 'axios';\nimport { serverUrl } from '../config/serverUrl';\naxios.defaults.baseURL = serverUrl;\nexport function loadGame(gameName) {\n  return {\n    type: 'LOAD_GAME',\n    payload: axios.get(gameName)\n  };\n}\nexport function updateGame(game) {\n  return {\n    type: 'UPDATE_GAME',\n    payload: game\n  };\n} //THUNK\n\nexport const startNewGame = gameName => {\n  return async function (dispatch) {\n    try {\n      const {\n        data\n      } = await axios.put(gameName + '/newGame', {\n        gameName\n      });\n      dispatch(updateGame(data));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\nexport const endTurn = gameName => {\n  return async function (dispatch) {\n    try {\n      const {\n        data\n      } = await axios.put(gameName + '/endTurn', {\n        gameName\n      });\n      dispatch(updateGame(data));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\nexport const cardClick = (gameName, cardIndex, teamClicked) => {\n  return async function (dispatch) {\n    try {\n      const {\n        data\n      } = await axios.put(gameName + '/cardClicked', {\n        cardIndex,\n        teamClicked\n      });\n      dispatch(updateGame(data));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};","map":{"version":3,"sources":["/Users/kevinlam/Desktop/Fullstack Academy of Code/Personal_Projects/codenames/src/actions/gameActions.js"],"names":["axios","serverUrl","defaults","baseURL","loadGame","gameName","type","payload","get","updateGame","game","startNewGame","dispatch","data","put","error","console","endTurn","cardClick","cardIndex","teamClicked"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyBF,SAAzB;AAEA,OAAO,SAASG,QAAT,CAAkBC,QAAlB,EACP;AACE,SAAO;AACLC,IAAAA,IAAI,EAAE,WADD;AAELC,IAAAA,OAAO,EAAEP,KAAK,CAACQ,GAAN,CAAUH,QAAV;AAFJ,GAAP;AAID;AAED,OAAO,SAASI,UAAT,CAAoBC,IAApB,EACP;AACE,SAAO;AACLJ,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,OAAO,EAAEG;AAFJ,GAAP;AAID,C,CAED;;AACA,OAAO,MAAMC,YAAY,GAAIN,QAAD,IAAc;AACxC,SAAO,gBAAgBO,QAAhB,EAA0B;AAC/B,QAAI;AACF,YAAM;AAACC,QAAAA;AAAD,UAAS,MAAMb,KAAK,CAACc,GAAN,CAAUT,QAAQ,GAAG,UAArB,EAAiC;AACpDA,QAAAA;AADoD,OAAjC,CAArB;AAGAO,MAAAA,QAAQ,CAACH,UAAU,CAACI,IAAD,CAAX,CAAR;AACD,KALD,CAKE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GATD;AAUD,CAXM;AAaP,OAAO,MAAME,OAAO,GAAIZ,QAAD,IAAc;AACnC,SAAO,gBAAgBO,QAAhB,EAA0B;AAC/B,QAAI;AACF,YAAM;AAACC,QAAAA;AAAD,UAAS,MAAMb,KAAK,CAACc,GAAN,CAAUT,QAAQ,GAAG,UAArB,EAAiC;AACpDA,QAAAA;AADoD,OAAjC,CAArB;AAGAO,MAAAA,QAAQ,CAACH,UAAU,CAACI,IAAD,CAAX,CAAR;AACD,KALD,CAKE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GATD;AAUD,CAXM;AAaP,OAAO,MAAMG,SAAS,GAAG,CAACb,QAAD,EAAWc,SAAX,EAAsBC,WAAtB,KAAsC;AAC7D,SAAO,gBAAgBR,QAAhB,EAA0B;AAC/B,QAAI;AACF,YAAM;AAACC,QAAAA;AAAD,UAAS,MAAMb,KAAK,CAACc,GAAN,CAAUT,QAAQ,GAAG,cAArB,EAAqC;AACxDc,QAAAA,SADwD;AAExDC,QAAAA;AAFwD,OAArC,CAArB;AAIAR,MAAAA,QAAQ,CAACH,UAAU,CAACI,IAAD,CAAX,CAAR;AACD,KAND,CAME,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GAVD;AAWD,CAZM","sourcesContent":["import axios from 'axios';\nimport { serverUrl } from '../config/serverUrl';\n\naxios.defaults.baseURL = serverUrl;\n\nexport function loadGame(gameName)\n{\n  return {\n    type: 'LOAD_GAME',\n    payload: axios.get(gameName)\n  };\n}\n\nexport function updateGame(game)\n{\n  return {\n    type: 'UPDATE_GAME',\n    payload: game\n  };\n}\n\n//THUNK\nexport const startNewGame = (gameName) => {\n  return async function (dispatch) {\n    try {\n      const {data} = await axios.put(gameName + '/newGame', {\n        gameName\n      })\n      dispatch(updateGame(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\n\nexport const endTurn = (gameName) => {\n  return async function (dispatch) {\n    try {\n      const {data} = await axios.put(gameName + '/endTurn', {\n        gameName\n      })\n      dispatch(updateGame(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\n\nexport const cardClick = (gameName, cardIndex, teamClicked) => {\n  return async function (dispatch) {\n    try {\n      const {data} = await axios.put(gameName + '/cardClicked', {\n        cardIndex,\n        teamClicked\n      })\n      dispatch(updateGame(data))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}